#mask detection data testing code

import cv2
import pickle
import numpy as np
import winsound

# Load the trained model
with open("mask_detector_model.pkl", "rb") as file:
    model = pickle.load(file)

# Categories
categories = ["with_mask", "without_mask"]

# Start video capture
cap = cv2.VideoCapture(0)

while True:
    ret, frame = cap.read()
    if not ret:
        break

    # Preprocess the frame
    face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + "haarcascade_frontalface_default.xml")
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    faces = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=5, minSize=(50, 50))

    for (x, y, w, h) in faces:
        face = frame[y:y+h, x:x+w]
        face_resized = cv2.resize(face, (64, 64)).flatten().reshape(1, -1)
        prediction = model.predict(face_resized)
        label = categories[prediction[0]]
        
        # Display results
        color = (0, 255, 0) if label == "with_mask" else (0, 0, 255)
        cv2.rectangle(frame, (x, y), (x+w, y+h), color, 2)
        cv2.putText(frame, label, (x, y-10), cv2.FONT_HERSHEY_SIMPLEX, 0.9, color, 2)
        
        # Play alert sound only if the person is wearing a mask
        if label == "with_mask":
            winsound.PlaySound("alert.wav", winsound.SND_ASYNC)

    cv2.imshow("Mask Detection", frame)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
