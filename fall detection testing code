


import cv2
import tensorflow as tf
import numpy as np

# Load your trained model
model = tf.keras.models.load_model('my_model.keras')  # or 'model.h5'

# Define your class labels
labels = ['Class 1', 'Class 2', 'Class 3']  # Adjust to your classes

# Initialize webcam
cap = cv2.VideoCapture(0)

# Ensure the webcam is opened successfully
if not cap.isOpened():
    print("Error: Could not open webcam.")
    exit()

while True:
    # Capture frame from webcam
    ret, frame = cap.read()

    if not ret:
        print("Error: Failed to capture image.")
        break

    # Resize frame to match the input size expected by the model
    frame_resized = cv2.resize(frame, (128, 128))  # Resize to 128x128
    frame_normalized = frame_resized / 255.0  # Normalize if necessary
    frame_expanded = np.expand_dims(frame_normalized, axis=0)  # Add batch dimension

    # Make predictions
    predictions = model.predict(frame_expanded)

    # Get the predicted class label
    predicted_class = np.argmax(predictions[0])
    predicted_label = labels[predicted_class]
    confidence = predictions[0][predicted_class] * 100

    # Display the prediction on the frame
    cv2.putText(frame, f'{predicted_label}: {confidence:.2f}%', (10, 30), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)
    cv2.rectangle(frame, (10, 10), (300, 50), (0, 255, 0), -1)

    # Display the frame
    cv2.imshow('Real-Time Prediction', frame)

    # Exit condition (press 'q' to quit)
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Release the webcam and close all windows
cap.release()
cv2.destroyAllWindows()
