# this code is for training the dataset for mask detection

import os
import cv2
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score
import pickle

# Paths
data_dir = "maskdata/train"
categories = ["with_mask", "without_mask"]

# Prepare dataset
data = []
labels = []

for category in categories:
    category_path = os.path.join(data_dir, category)
    label = categories.index(category)  # 0 for 'with_mask', 1 for 'without_mask'

    for img_name in os.listdir(category_path):
        img_path = os.path.join(category_path, img_name)
        img = cv2.imread(img_path)
        if img is not None:
            img_resized = cv2.resize(img, (64, 64))  # Resize to 64x64
            data.append(img_resized.flatten())
            labels.append(label)

data = np.array(data)
labels = np.array(labels)

# Split into training and test sets
X_train, X_test, y_train, y_test = train_test_split(data, labels, test_size=0.2, random_state=42)

# Train the SVM model
model = SVC(kernel='linear', probability=True)
model.fit(X_train, y_train)

# Evaluate
y_pred = model.predict(X_test)
print("Accuracy:", accuracy_score(y_test, y_pred))

# Save the trained model
with open("mask_detector_model.pkl", "wb") as file:
    pickle.dump(model, file)
